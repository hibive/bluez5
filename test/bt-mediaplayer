#!/usr/bin/python
# -*- coding: UTF-8 -*-

from __future__ import absolute_import, print_function, unicode_literals

import argparse
import sys
import dbus
import dbus.service
import dbus.mainloop.glib
try:
  from gi.repository import GObject
except ImportError:
  import gobject as GObject
import bluezutils

BUS_NAME = 'org.bluez'
MEDIA_PLAYER_INTERFACE = 'org.bluez.MediaPlayer1'

def find_media_player():
	bus = dbus.SystemBus()
	manager = dbus.Interface(bus.get_object('org.bluez', '/'),
			'org.freedesktop.DBus.ObjectManager')
	mo = manager.GetManagedObjects()

	for path, ifaces in mo.iteritems():
		mp = ifaces.get(MEDIA_PLAYER_INTERFACE)
		if mp is None:
			continue
		obj = bus.get_object('org.bluez', path)
		return dbus.Interface(obj, MEDIA_PLAYER_INTERFACE)
	raise Exception("Bluetooth MediaPlayer no found")

if __name__ == '__main__':

	parser = argparse.ArgumentParser()
	parser.add_argument('-r', '--run', 
			choices=['Play', 'Pause', 'Stop', 'Next', 
				'Previous', 'FastFoward', 'Rewind'])
	parser.add_argument('-p', '--prop', nargs='*')
	args = parser.parse_args()
		
	print(args)
	mp = find_media_player()

	if args.run is not None:
		if args.run == 'Play':
			mp.Play()
		if args.run == 'Pause':
			mp.Pause()
		if args.run == 'Stop':
			mp.Stop()
		if args.run == 'Next':
			mp.Next()
		if args.run == 'Previous':
			mp.Previous()
		if args.run == 'FastFoward':
			mp.FastFoward()
		if args.run == 'Rewind':
			mp.Rewind()

	if args.prop is not None:
		mo = bluezutils.get_managed_objects()
		for path, ifaces in mo.iteritems():
			if MEDIA_PLAYER_INTERFACE not in ifaces:
				continue
			props = ifaces[MEDIA_PLAYER_INTERFACE]
			for key, value in props.items():
				if key == 'Track':
					print("    %s" % key)
					for k, v in value.items():
						print("        %s: %s" % (k, v))
				else:
					print("    %s: %s" % (key, value))

	



